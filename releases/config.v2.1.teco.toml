# This is a minimal containerd configuration for Kubernetes
# Generated for containerd v2.1.x
disabled_plugins = []
imports = []
oom_score = 0
required_plugins = []
root = "/data/containerd"
state = "/run/containerd"
temp = ""
version = 3

[cgroup]
  path = ""

[debug]
  address = ""
  format = ""
  gid = 0
  level = "debug"
  uid = 0

[grpc]
  address = "/run/containerd/containerd.sock"
  gid = 0
  max_recv_message_size = 16777216
  max_send_message_size = 16777216
  tcp_address = ""
  tcp_tls_ca = ""
  tcp_tls_cert = ""
  tcp_tls_key = ""
  uid = 0

[metrics]
  address = ""
  grpc_histogram = false

[plugins]
  [plugins."io.containerd.cri.v1.images"]
    snapshotter = "overlayfs"
    disable_snapshot_annotations = true
    discard_unpacked_layers = false
    max_concurrent_downloads = 3
    concurrent_layer_fetch_buffer = 0
    image_pull_progress_timeout = "15m0s"
    image_pull_with_sync_fs = false
    stats_collect_period = 10
    use_local_image_pull = false

    [plugins."io.containerd.cri.v1.images".pinned_images]
      sandbox = "registry.tecorigin.local:5000/easzlab/pause:3.9"

    [plugins."io.containerd.cri.v1.images".registry]
      config_path = ""

      [plugins."io.containerd.cri.v1.images".registry.mirrors]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."jfrog.tecorigin.net"]
          endpoint = ["http://jfrog.tecorigin.net"]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."registry.tecorigin.io:5443"]
          endpoint = ["https://registry.tecorigin.io:5443"]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."business.tecorigin.io:5443"]
          endpoint = ["https://business.tecorigin.io:5443"]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."business1.tecorigin.io:5443"]
          endpoint = ["https://business1.tecorigin.io:5443"]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."business2.tecorigin.io:5443"]
          endpoint = ["https://business2.tecorigin.io:5443"]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."registry.tecorigin.net:5443"]
          endpoint = ["https://registry.tecorigin.net:5443"]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."registry.tecorigin.local:5000"]
          endpoint = ["http://registry.tecorigin.local:5000"]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."docker.io"]
          endpoint = ["https://docker.1ms.run", "https://hub.mirrorify.net", "https://docker.m.daocloud.io", "https://hub-mirror.c.163.com", "https://docker.nju.edu.cn/", "https://kuamavit.mirror.aliyuncs.com"]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."gcr.io"]
          endpoint = ["https://gcr.nju.edu.cn"]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."k8s.gcr.io"]
          endpoint = ["https://gcr.nju.edu.cn/google-containers/"]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."quay.io"]
          endpoint = ["https://quay.nju.edu.cn"]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."ghcr.io"]
          endpoint = ["https://ghcr.nju.edu.cn"]
        [plugins."io.containerd.cri.v1.images".registry.mirrors."nvcr.io"]
          endpoint = ["https://ngc.nju.edu.cn"]

      [plugins."io.containerd.cri.v1.images".registry.configs]
        [plugins."io.containerd.cri.v1.images".registry.configs."jfrog.tecorigin.net".tls]
          insecure_skip_verify = true
        [plugins."io.containerd.cri.v1.images".registry.configs."registry.tecorigin.io:5443".tls]
          insecure_skip_verify = true
        [plugins."io.containerd.cri.v1.images".registry.configs."business.tecorigin.io:5443".tls]
          insecure_skip_verify = true
        [plugins."io.containerd.cri.v1.images".registry.configs."business1.tecorigin.io:5443".tls]
          insecure_skip_verify = true
        [plugins."io.containerd.cri.v1.images".registry.configs."business2.tecorigin.io:5443".tls]
          insecure_skip_verify = true
        [plugins."io.containerd.cri.v1.images".registry.configs."registry.tecorigin.net:5443".tls]
          insecure_skip_verify = true
        [plugins."io.containerd.cri.v1.images".registry.configs."registry.tecorigin.local:5000".tls]
          insecure_skip_verify = true

    [plugins."io.containerd.cri.v1.images".image_decryption]
      key_model = "node"

  [plugins."io.containerd.cri.v1.runtime"]
    enable_selinux = false
    selinux_category_range = 1024
    max_container_log_line_size = 16384
    disable_apparmor = false
    restrict_oom_score_adj = false
    disable_proc_mount = false
    unset_seccomp_profile = ""
    tolerate_missing_hugetlb_controller = true
    disable_hugetlb_controller = true
    device_ownership_from_security_context = false
    ignore_image_defined_volumes = false
    netns_mounts_under_state_dir = false
    enable_unprivileged_ports = false
    enable_unprivileged_icmp = false
    enable_cdi = false
    cdi_spec_dirs = ["/etc/cdi", "/var/run/cdi"]
    drain_exec_sync_io_timeout = "0s"
    ignore_deprecation_warnings = []
    shared_snapshot_path = "/tecofs/notebook-pods"
    shared_snapshot_namespace_regex = "^kubecube-.*"
    shared_snapshot_pod_name_regex = "^nb-.*"

    [plugins."io.containerd.cri.v1.runtime".containerd]
      default_runtime_name = "teco"
      ignore_blockio_not_enabled_errors = false
      ignore_rdt_not_enabled_errors = false

      [plugins."io.containerd.cri.v1.runtime".containerd.runtimes]
        [plugins."io.containerd.cri.v1.runtime".containerd.runtimes.runc]
          runtime_type = "io.containerd.runc.v2"
          runtime_path = ""
          pod_annotations = []
          container_annotations = []
          privileged_without_host_devices = false
          privileged_without_host_devices_all_devices_allowed = false
          cgroup_writable = false
          base_runtime_spec = ""
          cni_conf_dir = ""
          cni_max_conf_num = 0
          snapshotter = ""
          sandboxer = "podsandbox"
          io_type = ""

          [plugins."io.containerd.cri.v1.runtime".containerd.runtimes.runc.options]
            SystemdCgroup = true
            BinaryName = ""
            CriuImagePath = ""
            CriuWorkPath = ""
            IoGid = 0
            IoUid = 0
            NoNewKeyring = false
            Root = ""
            ShimCgroup = ""

        [plugins."io.containerd.cri.v1.runtime".containerd.runtimes.teco]
          runtime_type = "io.containerd.runc.v2"
          runtime_path = ""
          pod_annotations = []
          container_annotations = []
          privileged_without_host_devices = false
          privileged_without_host_devices_all_devices_allowed = false
          cgroup_writable = false
          base_runtime_spec = ""
          cni_conf_dir = ""
          cni_max_conf_num = 0
          snapshotter = ""
          sandboxer = "podsandbox"
          io_type = ""

          [plugins."io.containerd.cri.v1.runtime".containerd.runtimes.teco.options]
            SystemdCgroup = true
            BinaryName = "/usr/bin/teco-container-runtime"
            CriuImagePath = ""
            CriuWorkPath = ""
            IoGid = 0
            IoUid = 0
            NoNewKeyring = false
            Root = ""
            ShimCgroup = ""
            env = ["LD_LIBRARY_PATH=/opt/tecoai/lib64:/opt/mellanox/sharp/lib:/usr/mpi/gcc/openmpi-4.1.5rc2/lib"]

    [plugins."io.containerd.cri.v1.runtime".cni]
      bin_dir = ""
      bin_dirs = ["/opt/cni/bin"]
      conf_dir = "/etc/cni/net.d"
      max_conf_num = 1
      setup_serially = false
      conf_template = "/etc/cni/net.d/10-default.conf"
      ip_pref = ""
      use_internal_loopback = false

  [plugins."io.containerd.gc.v1.scheduler"]
    deletion_threshold = 0
    mutation_threshold = 100
    pause_threshold = 0.02
    schedule_delay = "0s"
    startup_delay = "100ms"

  [plugins."io.containerd.grpc.v1.cri"]
    disable_tcp_service = true
    stream_server_address = "127.0.0.1"
    stream_server_port = "0"
    stream_idle_timeout = "4h0m0s"
    enable_tls_streaming = false

    [plugins."io.containerd.grpc.v1.cri".x509_key_pair_streaming]
      tls_cert_file = ""
      tls_key_file = ""

  [plugins."io.containerd.internal.v1.opt"]
    path = "/opt/containerd"

  [plugins."io.containerd.internal.v1.restart"]
    interval = "10s"

  [plugins."io.containerd.internal.v1.tracing"]
    sampling_ratio = 1.0
    service_name = "containerd"

  [plugins."io.containerd.metadata.v1.bolt"]
    content_sharing_policy = "shared"

  [plugins."io.containerd.monitor.v1.cgroups"]
    no_prometheus = false

  [plugins."io.containerd.nri.v1.nri"]
    disable = true
    disable_connections = false
    plugin_config_path = "/etc/nri/conf.d"
    plugin_path = "/opt/nri/plugins"
    plugin_registration_timeout = "5s"
    plugin_request_timeout = "2s"
    socket_path = "/var/run/nri/nri.sock"

  [plugins."io.containerd.runtime.v1.linux"]
    no_shim = false
    runtime = "runc"
    runtime_root = ""
    shim = "containerd-shim"
    shim_debug = false

  [plugins."io.containerd.runtime.v2.task"]
    platforms = ["linux/amd64"]

  [plugins."io.containerd.service.v1.diff-service"]
    default = ["walking"]

  [plugins."io.containerd.snapshotter.v1.overlayfs"]
    mount_options = []
    root_path = ""
    sync_remove = false
    upperdir_label = false

[timeouts]
  "io.containerd.timeout.bolt.open" = "0s"
  "io.containerd.timeout.metrics.shimstats" = "2s"
  "io.containerd.timeout.shim.cleanup" = "5s"
  "io.containerd.timeout.shim.load" = "5s"
  "io.containerd.timeout.shim.shutdown" = "3s"
  "io.containerd.timeout.task.state" = "2s"